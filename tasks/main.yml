---
- block:
  - raw: apt-get update
  - raw: apt-get install -y python curl
  ignore_errors: yes
  tags: ansible_bootstrap
  when: run_raw

- name: install essential packages
  apt: name='{{ bootstrap_packages }}'

- name: install sudo
  apt: name=sudo
  when: sudo_setup|bool

- name: create required groups
  group: name='{{ item }}'
  with_items: '{{ user_groups }}'

- name: create provision user
  user:
    name: '{{ user }}'
    home: '{{ home }}'
    generate_ssh_key: yes
    shell: '{{ shell }}'
    groups: '{{ user_groups }}'
    password_lock: '{{ lock_password }}'

- name: set primary group for user
  user: name='{{ user }}' group='{{ user_groups|first }}'
  when: user_groups|length > 0

- name: setup sudo
  template:
    src: sudoers.j2
    dest: '/etc/sudoers.d/{{ user }}'
    owner: root
    group: root
    mode: 0440
  when: sudo_setup|bool

- name: show ssh public key to add repo deployment key
  command: 'cat {{ home }}/.ssh/id_rsa.pub'
  register: ssh_pubkey
- block:
  - name: show generated SSH public key
    debug: msg='{{ ssh_pubkey.stdout }}'
  - name: copy ssh pubkey to local file and pipe it to xclip
    local_action: copy content='{{ ssh_pubkey.stdout }}' dest=./id_rsa.pub
  - local_action: shell xclip ./id_rsa.pub
    ignore_errors: yes
    register: xclip
  - local_action: file name=id_rsa.pub state=absent
    when: xclip.rc == 0 
  when: ssh_pubkey is defined and ssh_pubkey.stdout is defined
- name: authorize provision user from var
  authorized_key:
    user: '{{ user }}'
    key: '{{ ssh_pub_key }}'
  when: ssh_pub_key is defined
- name: authorize provision user from file
  authorized_key:
    user: '{{ user }}'
    key: '{{ lookup("file", ssh_pub_key_file) }}'
  when: ssh_pub_key_file is defined
- name: disable password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication no'
  notify: sshd reload
  when: disable_password_auth
- name: disable root login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin no'
  notify: sshd reload
  when: disable_root_login
